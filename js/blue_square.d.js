//座標

const posi = [
    [57.8,21.6,1], //0
    [66.9,21.6,1],
    [77.5,21.6,1],
    [77.5,31.7,1],
    [66.9,31.7,1],
    [57.8,31.7,1], //5
    [42.3,31.7,1],
    [24.2,31.7,1],
    [7.4,31.7,1],
    [7.4,48.6,1],
    [7.4,74.1,1], //10
    [7.4,88.4,1],
    [24.4,88.4,1],
    [42.3,88.4,1],
    [67,88.4,1],
    [77.5,88.4,1], //15
    [77.5,74,1],
    [77.5,48.6,1],
    [42.3,48.6,1],
    [42.3,74.1,1],
// ↑__ ここまで東校舎2F
    [77.5,21.6,0], //20
    [66.9,21.6,0],
    [57.8,21.6,0],
    [57.8,31.7,0],
    [66.9,31.7,0],
    [66.9,26.5,0], //25
    [77.5,31.7,0],
    [42.3,31.7,0],
    [24.2,31.7,0],
    [7.4,31.7,0],
    [7.4,48.6,0], //30
    [7.4,74.1,0],
    [7.4,88.3,0],
    [20.2,88.3,0],
    [42.3,88.3,0],
    [42.3,74.1,0], //35
    [42.3,48.9,0],
    [61.7,88.3,0],
    [77.5,88.3,0],
// ↑__ ここまで東校舎1F
    [74.0,123.6,0],
    [68,123.6,0], //40
    [68,138.2,0],
    [87.4,138.2,0],
    [87.4,152.9,0],
    [87.4,164.9,0],
    [82.6,171.8,0], //45
    [82.6,186.5,0],
    [61.3,171.8,0],
    [42.9,171.8,0],
    [47.6,138.2,0],
    [32.3,138.2,0], //50
    [32.3,118.7,0],
    [12.6,138.2,0],
    [12.6,148,0],
    [12.6,160.6,0],
    [12.6,151.5,1], //55
    [12.6,155.1,1],
    [12.6,159.1,1],
    [77.1,152.9,0],
    [41.2,186.5,0],
    [50.2,125,1], //60
    [82.2,96.8,1],  //bridge
    [82.5,101.7,0], //bridge
    [68,118.1,0],
    [61.3,186.5,0],
    [37.7,125,1], //65
// ↑__ ここまで西校舎
    [88.1,21.6,-1], //0
    [46.7,34.7,-1],
    [11.8,34.7,-1],
    [10.6,91.4,-1],
    [45.5,91.4,-1],     //70
    [80.7,91.4,-1], //5
    [72.4,118.1,-1],
    [27.1,114.2,-1],
    [6.6,151.2,-1],
    [150,115.5,-1]
// ↑__ ここまで踊り場
];

const dummy = 10;
const num = posi.length-dummy;

//二点間の線記入

const connect = [
    [0,1],
    [1,2],
    [2,num],
    [2,3],
    [3,4],
    [4,5],
    [5,0],
    [5,6],
    [6,num+1],
    [6,7],
    [7,8],
    [8,num+2],
    [8,9],
    [9,10],
    [10,11],
    [11,num+3],
    [11,12],
    [12,13],
    [13,num+4],
    [13,19],
    [19,18],
    [18,6],
    [13,14],
    [14,61],
    [14,15],
    [15,num+5],
    [15,16],
    [16,17],
    [17,3],
    [num,20],
    [20,21],
    [21,22],
    [22,23],
    [23,24],
    [24,26],
    [26,20],
    [20,25],
    [21,25],
    [22,25],
    [23,25],
    [24,25],
    [26,25],
    [23,27],
    [num+1,27],
    [27,28],
    [28,29],
    [29,30],
    [29,num+2],
    [30,31],
    [31,32],
    [32,num+3],
    [32,33],
    [33,34],
    [34,num+4],
    [34,35],
    [35,36],
    [36,27],
    [34,37],
    [37,38],
    [38,num+5],
    [39,40],
    [39,num+9],
    [40,63],
    [63,num+6],
    [num+6,60],
    [60,65],
    [40,41],
    [41,42],
    [41,58],
    [42,43],
    [43,44],
    [44,45],
    [45,46],
    [45,47],
    [47,48],
    [47,64],
    [46,64],
    [48,59],
    [41,49],
    [49,50],
    [50,51],
    [51,num+7],
    [num+7,65],
    [50,52],
    [52,53],
    [53,54],
    [53,num+8],
    [num+8,56],
    [56,55],
    [56,57],
    [61,62],
    [62,num+9],
    [64,59],
];

//頂点ごとに整理

let map = new Array(posi.length);
for (let i = 0; i < posi.length; ++i) map[i] = new Array();
connect.forEach((val) => {
    map[val[0]].push(val[1]);
    map[val[1]].push(val[0]);
});

//階で整理

let layer = [
    [ [],[]    ],
    [ [],[],[] ]
];

for(let i=0; i<posi.length; ++i){
    let j = 0;
    if(posi[i][2] == -1) continue;
    if(posi[i][1] > 100) j++;
    layer[j][posi[i][2]].push([ posi[i][0],posi[i][1],i ]);
}

//homeのmap(svg)と青点

this.addEventListener("load", ()=>{
    $.when(
        //Map_E1
        $.ajax({
            type: 'get',
            url: 'images/Koyo-East-text-1.svg', //ここにパスを入れる（環境に合わせて変更）
        }).done(function(data) {
            if(data instanceof XMLDocument) data = $(data).find("svg");
            $("#Map_E1").prepend(data);
        }),
        // Map_E2
        $.ajax({
            type: 'get',
            url: 'images/Koyo-East-text-2.svg' //ここにパスを入れる（環境に合わせて変更）
        }).done(function(data) {
            if(data instanceof XMLDocument) data = $(data).find("svg");
            $("#Map_E2").prepend(data);
        }),
        // Map_west
        $.ajax({
            type: 'get',
            url: 'images/Koyo-West-text-1.svg' //ここにパスを入れる（環境に合わせて変更）
        }).done(function(data) {
            if(data instanceof XMLDocument) data = $(data).find("svg");
            $("#Map_E3").prepend(data);
        })
    ).done(() => {
        for(let i=0; i<3; ++i){
            stsvg = document.getElementById(`svg${i}`);
            let minus = 0;
            if(i == 2) minus += 100;
            layer[Math.round(0.4*i)][i%2].forEach((val) => {
                stsvg.insertAdjacentHTML("beforeend",`<rect x="${1500-15*(val[1]-minus)-16}" y="${10*(val[0]-1.6)}" width="32" height="32"
                fill="rgb(192,226,247)" onclick="start(${val[2]})"/>`);
            });
        }
    });
});

function start(num){
    location.href = "Streetview.html?num=" + encodeURIComponent(num);
}